{
  "rules": {
    "locks": {
      "$canvasId": {
        ".read": "auth != null",
        "$shapeId": {
          ".write": "auth != null",
          ".validate": "newData.hasChildren(['userId', 'userName', 'timestamp']) || !newData.exists()"
        }
      }
    },
    "sessions": {
      "$canvasId": {
        ".read": "auth != null",
        "$userId": {
          ".write": "auth != null && auth.uid == $userId",
          ".validate": "(newData.exists() && newData.hasChildren(['displayName', 'color']) && newData.child('uid').val() == auth.uid) || !newData.exists()"
        }
      }
    },
    "drag": {
      "$canvasId": {
        ".read": "auth != null",
        "$shapeId": {
          ".write": "auth != null",
          ".validate": "(newData.exists() && newData.hasChildren(['draggingBy', 'timestamp'])) || !newData.exists()"
        }
      }
    },
    "selection-drag": {
      "$canvasId": {
        ".read": "auth != null",
        "$userId": {
          ".write": "auth != null && auth.uid == $userId",
          ".validate": "(newData.exists() && newData.hasChildren(['deltaX', 'deltaY', 'timestamp']) && (!newData.hasChild('shapeIds') || newData.hasChildren(['userId', 'userName', 'userColor', 'shapeIds', 'shapeCount', 'initialPositions']))) || !newData.exists()"
        }
      }
    },
    "ai-activity": {
      "$canvasId": {
        ".read": "auth != null",
        "$timestamp": {
          ".write": "auth != null",
          ".validate": "newData.hasChildren(['userId', 'command', 'timestamp']) || !newData.exists()"
        }
      }
    },
    "users": {
      "$userId": {
        "theme": {
          ".read": "auth != null && auth.uid == $userId",
          ".write": "auth != null && auth.uid == $userId",
          ".validate": "(newData.exists() && newData.hasChildren(['mode', 'lightColors', 'darkColors'])) || !newData.exists()"
        }
      }
    },
    // Deny access to any undefined paths
    "$other": {
      ".read": false,
      ".write": false
    }
  }
}

